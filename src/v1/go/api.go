/*
 * cloudwpss23-openapi-cyan
 *
 * OpenAPI Reference für das CloudWP der HAW Hamburg für das SommerSemster 2023
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"os"
)



// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request,
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface { 
	DeleteV1BucketName(http.ResponseWriter, *http.Request)
	DeleteV1FileName(http.ResponseWriter, *http.Request)
	GetV1BucketName(http.ResponseWriter, *http.Request)
	GetV1Buckets(http.ResponseWriter, *http.Request)
	GetV1FileName(http.ResponseWriter, *http.Request)
	GetV1Files(http.ResponseWriter, *http.Request)
	OptionsV1BucketName(http.ResponseWriter, *http.Request)
	OptionsV1Buckets(http.ResponseWriter, *http.Request)
	OptionsV1FileName(http.ResponseWriter, *http.Request)
	OptionsV1Files(http.ResponseWriter, *http.Request)
	PatchV1BucketName(http.ResponseWriter, *http.Request)
	PostV1BucketName(http.ResponseWriter, *http.Request)
	PutV1FileName(http.ResponseWriter, *http.Request)
}


// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DefaultApiServicer interface { 
	DeleteV1BucketName(context.Context, string) (ImplResponse, error)
	DeleteV1FileName(context.Context, string, string) (ImplResponse, error)
	GetV1BucketName(context.Context, string) (ImplResponse, error)
	GetV1Buckets(context.Context) (ImplResponse, error)
	GetV1FileName(context.Context, string, string) (ImplResponse, error)
	GetV1Files(context.Context, string) (ImplResponse, error)
	OptionsV1BucketName(context.Context, string) (ImplResponse, error)
	OptionsV1Buckets(context.Context) (ImplResponse, error)
	OptionsV1FileName(context.Context, string, string) (ImplResponse, error)
	OptionsV1Files(context.Context, string) (ImplResponse, error)
	PatchV1BucketName(context.Context, string, []Permission) (ImplResponse, error)
	PostV1BucketName(context.Context, string, PostV1BucketNameRequest) (ImplResponse, error)
	PutV1FileName(context.Context, string, string, *os.File) (ImplResponse, error)
}
