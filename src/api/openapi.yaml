openapi: 3.0.0
info:
  description: OpenAPI Reference für das CloudWP der HAW Hamburg für das SommerSemster
    2023
  title: cloudwpss23-openapi-cyan
  version: "1.0"
servers:
- url: http://localhost:3000
- description: ""
  url: https://api.cloudwp.anwski.de
security:
- bearer: []
paths:
  /users/{userId}:
    get:
      description: Retrieve the information of the user with the matching user ID.
      operationId: get-users-userId
      parameters:
      - description: Id of an existing user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: 1997-10-31
                    emailVerified: true
                    signUpDate: 2019-08-24
              schema:
                $ref: '#/components/schemas/User'
          description: User Found
        "404":
          description: User Not Found
      summary: Get User Info by User ID
      tags: []
    options:
      operationId: options-users-userId
      parameters:
      - description: Id of an existing user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
      summary: ""
    patch:
      description: Update the information of an existing user.
      operationId: patch-users-userId
      parameters:
      - description: Id of an existing user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: 1985-10-02
            schema:
              $ref: '#/components/schemas/patch_users_userId_request'
        description: Patch user properties to update.
      responses:
        "200":
          content:
            application/json:
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: 1985-10-02
                    emailVerified: false
                    createDate: 2019-08-24
              schema:
                $ref: '#/components/schemas/User'
          description: User Updated
        "404":
          description: User Not Found
        "409":
          description: Email Already Taken
      summary: Update User Information
  /user:
    options:
      operationId: options-user
      responses:
        "200":
          description: OK
      summary: ""
    post:
      description: Create a new user.
      operationId: post-user
      requestBody:
        content:
          application/json:
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: 1996-08-24
            schema:
              $ref: '#/components/schemas/post_user_request'
        description: Post the necessary fields for the API to create a new user.
      responses:
        "200":
          content:
            application/json:
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: 1996-08-24
                    emailVerified: false
                    createDate: 2020-11-18
              schema:
                $ref: '#/components/schemas/User'
          description: User Created
        "400":
          description: Missing Required Information
        "409":
          description: Email Already Taken
      summary: Create New User
  /api/external:
    get:
      operationId: get-api-external
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    pong: string
              schema:
                $ref: '#/components/schemas/get_api_external_200_response'
          description: OK
      summary: Your GET endpoint
      tags: []
    options:
      operationId: options-api-external
      responses:
        "200":
          description: OK
      summary: ""
  /file/upload:
    options:
      operationId: options-file-upload
      responses:
        "200":
          description: OK
      summary: ""
    put:
      operationId: put-file-upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      responses:
        "200":
          description: OK
      security:
      - bearer: []
      summary: ""
  /files:
    get:
      operationId: get-files
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_files_200_response'
          description: OK
      security:
      - bearer: []
      summary: Your GET endpoint
      tags: []
    options:
      operationId: options-files
      responses:
        "200":
          description: OK
      summary: ""
  /files/{name}:
    get:
      operationId: get-files-name
      parameters:
      - description: file name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            blob:
              schema:
                $ref: '#/components/schemas/File'
          description: OK
      security:
      - bearer: []
      summary: Your GET endpoint
      tags: []
    options:
      operationId: options-files-name
      parameters:
      - description: file name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: ""
components:
  schemas:
    User:
      example:
        firstName: firstName
        lastName: lastName
        emailVerified: true
        dateOfBirth: 1997-10-31T00:00:00.000+00:00
        id: 0
        email: email
        createDate: 2000-01-23
      properties:
        id:
          description: Unique identifier for the given user.
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          format: email
          type: string
        dateOfBirth:
          example: 1997-10-31
          format: date
          type: string
        emailVerified:
          description: Set to true if the user's email has been verified.
          type: boolean
        createDate:
          description: The date that the user was created.
          format: date
          type: string
      required:
      - email
      - emailVerified
      - firstName
      - id
      - lastName
      title: User
      type: object
    File:
      properties:
        name:
          type: string
        data:
          format: binary
          type: string
      title: File
      type: object
      x-stoplight:
        id: v3bkspnm47zj8
    FileInfo:
      example:
        size: 0
        name: name
        lastmod: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          type: string
        size:
          format: int64
          type: integer
        lastmod:
          format: date-time
          type: string
      title: FileInfo
      type: object
      x-stoplight:
        id: 1li8v06fqrcaw
    patch_users_userId_request:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          description: "If a new email is given, the user's email verified property\
            \ will be set to false."
          type: string
        dateOfBirth:
          type: string
      type: object
    post_user_request:
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          format: date
          type: string
      required:
      - dateOfBirth
      - email
      - firstName
      - lastName
      type: object
    get_api_external_200_response:
      example:
        pong: pong
      properties:
        pong:
          type: string
      required:
      - pong
      type: object
    get_files_200_response:
      example:
        bucket: bucket
        files:
        - size: 0
          name: name
          lastmod: 2000-01-23T04:56:07.000+00:00
        - size: 0
          name: name
          lastmod: 2000-01-23T04:56:07.000+00:00
      properties:
        bucket:
          type: string
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
      type: object
  securitySchemes:
    bearer:
      description: ""
      flows:
        authorizationCode:
          authorizationUrl: ""
          refreshUrl: ""
          scopes: {}
          tokenUrl: ""
      type: oauth2
x-stoplight:
  id: l2iyn7fvt7fmd
